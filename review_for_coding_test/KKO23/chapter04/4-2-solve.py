"""
8 * 8 좌표 평면
나이트는 L자 형태로만 이동 
(x,y)
1. 수평으로 두칸 이동한 뒤 수직으로 한칸 이동
    - 왼쪽으로 두칸 이동
        - 위로 한칸 이동        = -2, -1
        - 아래로 한칸 이동      = -2, +1
    - 오른쪽으로 두칸 이동 
        - 위로 한칸 이동        = +2, -1
        - 아래로 한칸 이동      = +2, +1
2. 수직으로 두칸 이동한 뒤 수평으로 한칸 이동 
    - 위로 두 칸 이동
        - 왼쪽으로 한칸 이동        = -1, -2
        - 오른쪽으로 한칸 이동      = +1, -2
    - 아래로 두칸 이동 
        - 왼쪽으로 한칸 이동        = -1, +2
        - 오른쪽으로 한칸 이동      = +1, +2
나이트 위치가 주어졌을 때 나이트가 이동할 수 있는 경우의수 
행 - 1부터 8 / 열 - a부터 h
"""

# 나이트가 위치한 좌표 입력 (a1, 열/행) 
loc = input()
x = int(loc[1])                          # 행 좌표 1 ~ 8 
y = ord(loc[0]) - ord('a') + 1                # 열 좌표 1 ~ 8 

# 경우의수 0으로 초기화 
count = 0

# 나이트를 수평으로 두칸 이동 + 수직으로 한칸 이동 or 수직으로 두칸 이동 + 수평으로 한칸 이동하는 리스트 생성
dx = [-2, -2, 2, 2, -1, 1, -1, 1]
dy = [-1, 1, -1, 1, -2, -2, 2, 2]

# 나이트 좌표 이동 리스트를 반복하며 
for i in range(8):
    # 다음 좌표 
    next_x = x + dx[i]
    next_y = y + dy[i]

    # 해당 좌표가 좌표평면안에 있으면
    if 1 <= next_x <= 8 and 1 <= next_y <= 8:
        # 경우의 수 증가 
        count += 1

# 나이트가 이동할 수 있는 경우의수 출력 
print(count)